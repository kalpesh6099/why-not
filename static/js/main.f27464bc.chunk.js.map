{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Search","handle","placeholder","type","onChange","App","state","searchField","fetch","then","response","json","body","setState","this","filtered","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAAMG,QAAQC,GAAzC,0BAAqEC,IAAI,QACjF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCFbC,EAAY,SAAAR,GACrB,OAAO,qBAAKC,UAAY,YAAjB,SACFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAyBA,QAAYA,GAAxBA,EAAQC,UCLhBO,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAASC,EAAX,EAAWA,YAAX,OAClB,8BACI,uBACIZ,UAAY,SACZa,KAAK,OACLD,YAAeA,EACfE,SAAYH,QC8BTI,E,kDAjCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAGzC,WAAU,IAAD,OACP,EAAmCE,KAAKR,MAAhCR,EAAR,EAAQA,SAAWS,EAAnB,EAAmBA,YACbQ,EAAYjB,EAASkB,QAAO,SAAAxB,GAAO,OACvCA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYY,wBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACEY,YAAc,SACdD,OAAU,SAACmB,GAAD,OAAM,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAUxB,SAAYiB,W,GA5BZQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f27464bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Card.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"img\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\n\r\nimport './CardList.css'\r\n\r\nimport { Card } from '../card/Card.jsx'\r\n\r\nexport const CardList  = props => {\r\n    return <div className = 'card-list'>\r\n        {props.monsters.map(monster => \r\n        <Card key = {monster.id} monster = { monster }/>) }\r\n    </div>\r\n}","import React from 'react'\r\n\r\nimport './search.css'\r\n\r\nexport const Search = ({handle , placeholder}) => (\r\n    <div>\r\n        <input\r\n            className = 'search' \r\n            type=\"text\" \r\n            placeholder = {placeholder}\r\n            onChange = {handle}\r\n        />\r\n    </div>\r\n)","import React, {Component} from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/CardList.jsx'\nimport { Search } from './components/search/search.jsx'\n\nclass App extends Component{\n\n  constructor(){\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(body => this.setState({monsters: body}))\n  }\n\n  render() {\n    const { monsters , searchField } = this.state\n    const filtered =  monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <Search\n          placeholder = 'search'\n          handle = {(e)=> this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters = {filtered}/>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}